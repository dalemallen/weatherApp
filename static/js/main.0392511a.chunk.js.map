{"version":3,"sources":["logo.svg","components/Search/Search.js","components/Weather/WeatherType.js","components/Weather/Weather.js","components/Error.js","components/Weather/WeatherMain.js","components/Weather/WeatherList.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Search","props","className","onSubmit","getWeather","id","htmlFor","type","WeatherType","theType","toLowerCase","console","log","Day","dt","thedate","Date","weekdays","Array","getDay","Weather","weather","main","dt_txt","Math","round","temp","Error","state","hasError","error","this","setState","children","React","Component","WeatherMain","today","name","sys","country","humidity","temp_min","temp_max","WeatherList","todaysWeather","weatherlist","map","i","key","API_KEY","App","e","a","preventDefault","isLoading","city","target","value","trim","length","toTimeString","split","time","Promise","all","fetch","then","response","json","catch","dailyWeather","list","filter","reading","includes","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0392511a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React, { Component } from 'react'\r\nimport './Search.css'\r\n\r\nconst Search = (props) => {\r\n\r\n    return ( \r\n        <div className=\"container\">\r\n            <form onSubmit={props.getWeather}>\r\n                <div className=\"form-group row\" id=\"searchbar\">\r\n                    <div className=\"col-md-4\">\r\n                        <div className=\"row\">\r\n                            <label htmlFor=\"city\" className=\"col-md-2 col-form-label\">City</label>\r\n                            <div className=\"col-md-10\">\r\n                                <input className=\"form-control\" type=\"text\" id=\"city\"/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <div className=\"row \">\r\n                            <label htmlFor=\"country\" className=\"col-md-3 col-form-label\">Country</label>\r\n                            <div className=\"col-md-9\">\r\n                            <input className=\"form-control\" type=\"text\" id=\"country\"/> \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-2 \">\r\n                        <button className=\"btn btn-outline-primary text-center\" type=\"submit\">Get Weather</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","import React from 'react'\r\nimport './Weather.css'\r\n\r\nconst WeatherType = (type) => {\r\n    let theType = type.type.toLowerCase()\r\n    // theType.toLowerCase()\r\n    if(theType === \"clouds\"){\r\n        // this.setstate({weatherType: \"cloudy\"})\r\n        let theType = \"cloudy\"\r\n        return <i className={\"wi wi-day-\"+theType}></i>\r\n\r\n    }else if(theType === \"clear\"){\r\n        // this.setstate({weatherType: \"cloudy\"})\r\n        let theType = \"sunny\"\r\n        return <i className={\"wi wi-day-\"+theType}></i>\r\n\r\n    }         \r\n    console.log(theType)\r\n    return <i className={\"wi wi-day-\"+theType}></i>\r\n}\r\n\r\nexport default WeatherType","import React, { Component } from 'react'\r\nimport './Weather.css'\r\nimport WeatherType from './WeatherType'\r\n\r\nconst Day = (props) => {\r\n    const dt = props.dt;   \r\n    const thedate = new Date(dt);\r\n    const weekdays = new Array(7);\r\n    weekdays[0] = \"Sunday\";\r\n    weekdays[1] = \"Monday\";\r\n    weekdays[2] = \"Tuesday\";\r\n    weekdays[3] = \"Wednesday\";\r\n    weekdays[4] = \"Thursday\";\r\n    weekdays[5] = \"Friday\";\r\n    weekdays[6] = \"Saturday\";\r\n    const day = weekdays[thedate.getDay()];\r\n    return day\r\n}\r\n\r\nconst Weather = (props) => {\r\n         const weather = props.weather;   \r\n         return (  \r\n            <div className=\"col-md-12\" id=\"weather\"> \r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-md-2\"> \r\n                        <WeatherType type={weather.weather[0].main}/> \r\n                    </div>\r\n                    <div className=\"col-md-4\"> \r\n                        <h2><Day dt={weather.dt_txt} /></h2>\r\n                    </div>\r\n                    <div className=\"col-md-6\"> \r\n                    <h2>{Math.round(weather.main.temp)}°C</h2>\r\n                        {/* <h2><span>{Math.round(weather.main.temp_min)}°C Min</span>  <span>{Math.round(weather.main.temp_max)}°C Max</span></h2> */}\r\n                    </div>                      \r\n                </div>     \r\n            </div>          \r\n         )\r\n}\r\n\r\nexport default Weather\r\n","import React, { Component } from 'react'\r\n\r\nclass Error extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { hasError: false };\r\n  }\r\n\r\n  componentDidCatch(error) {\r\n    // Display fallback UI\r\n    this.setState({ hasError: true });\r\n    // You can also log the error to an error reporting service\r\n    console.log(error)\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      // You can render any custom fallback UI\r\n      return <h1>Something went wrong.</h1>;\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default Error\r\n","import React, {Component } from 'react'\r\nimport './Weather.css'\r\nimport WeatherType from './WeatherType'\r\nimport Error from '../Error'\r\n\r\nconst WeatherMain = (props) => {  \r\n\r\n    const today = props.today;\r\n    return ( \r\n        <div className=\"col-md-4\" id=\"main\">\r\n\r\n            <h1>{today.name}, {today.sys.country}</h1>\r\n            <br/>\r\n            <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n            <WeatherType type={today.weather[0].main}/>\r\n                </div>\r\n                <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                    <h3>{Math.round(today.main.temp)}°C</h3>\r\n                </div>\r\n                <div className=\"col-md-12\">\r\n                    <h3>{today.weather[0].main}</h3>\r\n                </div>\r\n                </div>\r\n\r\n            </div>\r\n            <br/>\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col-md-12\">\r\n                <h2>Humidity {today.main.humidity}</h2>\r\n                </div>\r\n            </div> \r\n                <br/>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                <h2>{Math.round(today.main.temp_min)}°C Min</h2>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                    <h2>{Math.round(today.main.temp_max)}°C Max</h2>\r\n                </div>\r\n            </div>        \r\n             \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WeatherMain\r\n","import React, { Component } from 'react'\r\nimport Weather from './Weather'\r\nimport WeatherMain from './WeatherMain'\r\nimport './Weather.css'\r\nimport Error from '../Error'\r\n\r\n\r\nconst WeatherList = (props) => {  \r\n    console.log(props)\r\n    return ( \r\n            <div className=\"container\">\r\n                <div className=\"row\" id=\"weatherlist\">\r\n                    {/* {props.todaysWeather.message !== \"city not found\" && props.todaysWeather.length !== 0  && <WeatherMain today={props.todaysWeather}/>}  */}\r\n                    <Error>\r\n                    <WeatherMain today={props.todaysWeather}/>\r\n                    </Error>\r\n                    <div className=\"col-md-8\" id=\"forecast\">\r\n                        <h1 id=\"forecastTitle\">5Day Forecast</h1>\r\n                        {/* loop through and display weather list */}\r\n                        {props.weatherlist && props.weatherlist.map((weather, i) => {\r\n                        return <Weather  key={i} weather={weather}/> })}\r\n                    </div>\r\n                </div> \r\n            </div>\r\n    )\r\n}\r\n\r\nexport default WeatherList\r\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport Search from './components/Search/Search';\nimport WeatherList from './components/Weather/WeatherList'\n// import Error from './components/Error'\nconst API_KEY = \"2b05391391f6e0c00d0d4a7bc27bf59d\";\n\nclass App extends Component  {\n    constructor(){\n      super();\n      this.state = {\n        todaysWeather: [],\n        weatherlist: [],\n        isLoading: false,\n        hasError: false\n      }  \n    }\n\n  getWeather = async (e) => {\n    \n    e.preventDefault (e);\n\n    this.setState({ hasError: false, isLoading: true});\n\n    const city = e.target.city.value;\n    const country = e.target.country.value;\n\n    if(city.trim().length === 0 || country.trim().length === 0){\n      return  this.setState({ hasError: true, isLoading: false});\n\n      \n    }\n    const dt = new Date().toTimeString().split(\" \", 2)\n    const time = dt[0]\n    console.log(time)\n\n\n    \n    //const current = `http://api.openweathermap.org/data/2.5/forecast?q=${city},${country}&appid=${API_KEY}&units=metric`;\n    //const forecast = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_KEY}&units=metric`)\n\n    Promise.all([fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_KEY}&units=metric`)\n    .then((response) => response.json())\n    .then(response => {     \n        this.setState({todaysWeather: response})\n    }).catch(error => {\n      return  this.setState({ hasError: true, isLoading: false});\n    }),\n    fetch(`http://api.openweathermap.org/data/2.5/forecast?q=${city},${country}&appid=${API_KEY}&units=metric`)\n    .then((response) => response.json())\n    .then(response => {  \n      const dailyWeather = response.list.filter(reading =>  reading.dt_txt.includes(\"18:00:00\"))        \n      console.log(dailyWeather)       \n      this.setState({weatherlist: dailyWeather})\n    })\n    .catch(error => {\n      return  this.setState({ hasError: true, isLoading: false});\n   })\n    \n  ])\n\n    this.setState({isLoading: false})\n    \n  }\n\n  render() {\n    return (\n      <div className=\"container-fluid\">\n          <Search getWeather={this.getWeather} />    \n          <div className=\"jusfity-content-center\">\n            {this.state.isLoading? <h1>Loading</h1> : <h1></h1>}\n            {this.state.hasError? <h1>The weather is fickle and it seems so is the App.</h1>: <h1></h1>}\n          </div>  \n          <br/>\n          <br/>\n          {this.state.weatherlist.length !== 0 && !this.state.hasError && <WeatherList todaysWeather={this.state.todaysWeather} weatherlist={this.state.weatherlist} />}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'weather-icons/css/weather-icons.min.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}